{"version":3,"file":"static/js/650.0ffd9af2.chunk.js","mappings":"oKA0BA,IAvBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CACEC,GAA0B,MAAtBL,EAASM,SAAT,iBAAsCF,GAAtC,UAAgDA,GACpDG,MAAO,CAAEC,KAAMR,GAFjB,SAIGG,KALIC,EADC,KAYjB,C,mHCgBD,EAhCkB,SAAC,GAAmB,IAAjBK,EAAgB,EAAhBA,UACnB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAoCC,EAAAA,EAAAA,WAClC,kCAAMF,EAAaG,IAAI,gBAAvB,QAAmC,EAAnC,IADF,eAAOC,EAAP,KAAmBC,EAAnB,KAaA,OACE,kBAAMC,SAVR,SAAkBC,GAChBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,MAAMC,MAAMC,OAGnCZ,EAFwBQ,EAAQ,CAAEA,MAAAA,GAAU,CAAC,GAG7CX,EAAUW,EACX,EAGC,WACE,kBACEK,KAAK,OACLC,KAAK,QACLH,MAAOR,EACPY,SAAU,SAAAT,GAAC,OAAIF,EAAcE,EAAEG,OAAOE,MAA3B,KAEb,yCAGL,E,kBCOD,EA9Be,WACb,OAAuBb,EAAAA,EAAAA,MAAhBC,GAAP,eACA,GAA4BE,EAAAA,EAAAA,WAAS,GAArC,eAAOd,EAAP,KAAe6B,EAAf,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMT,EAAQT,EAAaG,IAAI,SAC1BM,IACLU,EAAAA,EAAAA,IAAmBV,GAAOW,KAAKH,GAAWI,MAAMC,QAAQC,IACzD,GAAE,CAACvB,IAOJ,OACE,iCACE,SAAC,EAAD,CAAWF,UAPE,SAAAW,GACf,IAAKA,EAAO,OAAOQ,GAAU,IAC7BE,EAAAA,EAAAA,IAAmBV,GAAOW,KAAKH,GAAWI,MAAMC,QAAQC,IACzD,IAKInC,GACC,SAACoC,EAAA,EAAD,CAAWpC,OAAQA,KAEnB,SAACqC,EAAA,EAAD,CAASC,QAAQ,kDAEjBtC,EAAOuC,SACP,SAACF,EAAA,EAAD,CAASC,QAAQ,mDAIxB,C,+LClCDE,EAAAA,EAAAA,SAAAA,QAAyB,GAEzB,IAAMC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,6FACZD,EAAW,qBAC1BE,EAAS,CACbC,IAFmBH,kDAGnBI,OAAQ,CACNC,QAASN,IALoB,UAQPD,EAAAA,EAAAA,GAAMI,GARC,cAQ3BI,EAR2B,yBAS1BA,EAAYC,KAAKC,SATS,2CAAH,qDAYnBnB,EAAkB,mCAAG,WAAMV,GAAN,gFACbqB,EAAW,eACxBE,EAAS,CACbC,IAFiBH,4CAGjBI,OAAQ,CACNC,QAASN,EACTpB,MAAAA,EACA8B,SAAU,QACVC,eAAe,IARa,UAWNZ,EAAAA,EAAAA,GAAMI,GAXA,cAW1BI,EAX0B,yBAYzBA,EAAYC,KAAKC,SAZQ,2CAAH,sDAelBG,EAAiB,mCAAG,WAAMhD,GAAN,kFACzBiD,EADyB,UACVZ,EADU,iBACOrC,GAChCuC,EAAS,CACbC,IAAKS,EACLR,OAAQ,CACNC,QAASN,EACTU,SAAU,UANiB,UASLX,EAAAA,EAAAA,GAAMI,GATD,cASzBI,EATyB,yBAUxBA,EAAYC,MAVY,2CAAH,sDAajBM,EAAc,mCAAG,WAAMlD,GAAN,kFACtBiD,EADsB,UACPZ,EADO,iBACUrC,EADV,YAEtBuC,EAAS,CACbC,IAAKS,EACLR,OAAQ,CACNC,QAASN,EACTU,SAAU,UANc,UASFX,EAAAA,EAAAA,GAAMI,GATJ,cAStBI,EATsB,yBAUrBA,EAAYC,KAAKO,MAVI,2CAAH,sDAadC,EAAiB,mCAAG,WAAMpD,GAAN,kFACzBiD,EADyB,UACVZ,EADU,iBACOrC,EADP,YAEzBuC,EAAS,CACbC,IAAKS,EACLR,OAAQ,CACNC,QAASN,EACTU,SAAU,UANiB,UASLX,EAAAA,EAAAA,GAAMI,GATD,cASzBI,EATyB,yBAUxBA,EAAYC,KAAKC,SAVO,2CAAH,qD","sources":["components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/MovieService.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link\n            to={location.pathname === '/' ? `movies/${id}` : `${id}`}\n            state={{ from: location }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.array.isRequired,\n};\n\nexport default MovieList;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ fetchData }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const query = e.target.input.value.trim();\n    const newSearchParams = query ? { query } : {};\n\n    setSearchParams(newSearchParams);\n    fetchData(query);\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"input\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      ></input>\n      <button>Search</button>\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/MovieService';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport Warning from 'components/Warning/Warning';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const [movies, setMovies] = useState(false);\n\n  useEffect(() => {\n    const query = searchParams.get('query');\n    if (!query) return;\n    fetchMoviesByQuery(query).then(setMovies).catch(console.log);\n  }, [searchParams]);\n\n  const onSubmit = query => {\n    if (!query) return setMovies(false);\n    fetchMoviesByQuery(query).then(setMovies).catch(console.log);\n  };\n\n  return (\n    <>\n      <Searchbar fetchData={onSubmit} />\n      {movies ? (\n        <MovieList movies={movies} />\n      ) : (\n        <Warning message=\"Please let us know what are you looking for.\" />\n      )}\n      {!movies.length && (\n        <Warning message=\"No movies found, please try different query.\" />\n      )}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["movies","location","useLocation","map","title","id","to","pathname","state","from","fetchData","useSearchParams","searchParams","setSearchParams","useState","get","inputValue","setInputValue","onSubmit","e","preventDefault","query","target","input","value","trim","type","name","onChange","setMovies","useEffect","fetchMoviesByQuery","then","catch","console","log","MovieList","Warning","message","length","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","data","results","language","include_adult","fetchMovieDetails","MOVIE_URL","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}