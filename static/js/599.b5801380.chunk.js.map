{"version":3,"file":"static/js/599.b5801380.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.jsx","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/MovieService.js"],"sourcesContent":["import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const ItemLink = styled(Link)`\n  font-size: 18px;\n  font-weight: 700;\n  color: #362d62;\n  text-decoration: none;\n\n  &:hover,\n  &:focus,\n  &:visited:hover,\n  &:visited:focus {\n    color: #ff9400;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, ItemLink } from './MovieList.styled';\nimport noPoster from 'images/no-poster.png';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {movies.map(({ id, title, poster_path }) => {\n        const posterImg = poster_path\n          ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`\n          : noPoster;\n        const posterAlt = `Poster of ${title}`;\n\n        return (\n          <li key={id}>\n            <ItemLink to={`/movies/${id}`} state={{ from: location }}>\n              <img src={posterImg} alt={posterAlt} width=\"200\" heigth=\"300\" />\n              <p>{title}</p>\n            </ItemLink>\n          </li>\n        );\n      })}\n    </List>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MovieList;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 320px;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-left: auto;\n  margin-right: auto;\n  background-color: #fff;\n  border: 2px solid #ceccf4;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nexport const Input = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  &::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: inline-block;\n  width: 48px;\n  height: 48px;\n  border: 0;\n  background-image: url('https://pic.onlinewebfonts.com/svg/img_194915.svg');\n  background-size: 40%;\n  background-repeat: no-repeat;\n  background-position: center;\n  opacity: 0.6;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n\n  &:hover {\n    opacity: 1;\n  }\n`;\n\nexport const ButtonLabel = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  clip-path: inset(50%);\n  border: 0;\n`;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport PropTypes from 'prop-types';\nimport { Form, Input, Button, ButtonLabel } from './Searchbar.styled';\n\nconst Searchbar = ({ fetchData }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const query = e.target.input.value.trim();\n    const newSearchParams = query ? { query } : {};\n    setSearchParams(newSearchParams);\n\n    if (!query) return toast.warn('Query cannot be empty.');\n    fetchData(query);\n  }\n\n  return (\n    <Form onSubmit={onSubmit}>\n      <Input\n        type=\"text\"\n        name=\"input\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n        autoFocus\n        placeholder=\"Search movies\"\n      ></Input>\n      <Button>\n        <ButtonLabel>Search</ButtonLabel>\n      </Button>\n    </Form>\n  );\n};\n\nSearchbar.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/MovieService';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport Warning from 'components/Warning/Warning';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function getMovies(searchQuery) {\n      setIsLoading(true);\n      setMovies(null);\n      try {\n        const data = await fetchMoviesByQuery(searchQuery);\n        setMovies(data);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (query) getMovies(query);\n  }, [query]);\n\n  const onSubmit = query => {\n    if (!query) return setMovies(null);\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Searchbar fetchData={onSubmit} />\n      {isLoading && <Loader />}\n      {isError && (\n        <Warning message=\"Something went wrong. Please try again later.\" />\n      )}\n      {!movies && !isLoading && (\n        <Warning message=\"Please let us know what are you looking for.\" />\n      )}\n      {movies &&\n        (movies?.length ? (\n          <MovieList movies={movies} />\n        ) : (\n          <Warning message=\"Your request turned no results. Please try another query.\" />\n        ))}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["List","styled","ItemLink","Link","movies","location","useLocation","map","id","title","poster_path","posterImg","noPoster","posterAlt","to","state","from","src","alt","width","heigth","Form","Input","Button","ButtonLabel","fetchData","useSearchParams","searchParams","setSearchParams","useState","get","inputValue","setInputValue","onSubmit","e","preventDefault","query","target","input","value","trim","toast","type","name","onChange","autoFocus","placeholder","setMovies","isLoading","setIsLoading","isError","setIsError","useEffect","searchQuery","fetchMoviesByQuery","data","getMovies","Loader","Warning","message","length","MovieList","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","results","language","include_adult","fetchMovieDetails","MOVIE_URL","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}