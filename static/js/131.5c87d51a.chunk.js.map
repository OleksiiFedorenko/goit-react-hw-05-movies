{"version":3,"file":"static/js/131.5c87d51a.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","components/MainInfo/MainInfo.styled.js","components/MainInfo/MainInfo.jsx","pages/MovieDetails/MovieDetails.jsx","services/MovieService.js"],"sourcesContent":["export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 10px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './MainInfo.styled';\nimport noPoster from 'images/no-poster.png';\n\nconst MainInfo = ({ data }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  const posterImg = poster_path\n    ? `https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`\n    : noPoster;\n  const posterAlt = `Poster of ${original_title}`;\n  const title = `${original_title} (${release_date.slice(0, 4)})`;\n  const genresString = genres.map(({ name }) => name).join(', ');\n\n  return (\n    <Container>\n      <img src={posterImg} alt={posterAlt} width=\"200\" height=\"300\" />\n      <div>\n        <h1>{title}</h1>\n        <p>User Score: {vote_average}</p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genresString}</p>\n      </div>\n    </Container>\n  );\n};\n\nMainInfo.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default MainInfo;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/MovieService';\nimport MainInfo from 'components/MainInfo/MainInfo';\nimport Loader from 'components/Loader/Loader';\nimport Warning from 'components/Warning/Warning';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/movies');\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovieData).catch(setError);\n  }, [movieId]);\n\n  return (\n    <>\n      <Link to={backLinkRef.current}>Go back</Link>\n      {movieData && <MainInfo data={movieData} />}\n      {movieData && (\n        <div>\n          <h4>Additional info</h4>\n          <ul>\n            <li>\n              <Link to=\"cast\">Cast</Link>\n            </li>\n            <li>\n              <Link to=\"reviews\">Reviews</Link>\n            </li>\n          </ul>\n        </div>\n      )}\n      {error && (\n        <Warning message=\"This page doesn't exist or something went wrong. Please try different page or try again later.\" />\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["strings","raw","Container","styled","slice","Object","freeze","defineProperties","value","data","poster_path","original_title","release_date","vote_average","overview","genres","posterImg","posterAlt","title","genresString","map","name","join","src","alt","width","height","location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useState","movieData","setMovieData","error","setError","useEffect","fetchMovieDetails","then","catch","to","current","Warning","message","Suspense","fallback","Loader","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","results","fetchMoviesByQuery","query","language","include_adult","id","MOVIE_URL","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}