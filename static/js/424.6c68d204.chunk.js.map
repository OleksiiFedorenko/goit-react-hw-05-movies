{"version":3,"file":"static/js/424.6c68d204.chunk.js","mappings":"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","sources":["components/MainInfo/MainInfo.styled.js","components/MainInfo/MainInfo.jsx","components/AdditionalInfo/AdditionalInfo.styled.jsx","components/AdditionalInfo/AdditionalInfo.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/MovieService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  margin-top: 10px;\n  display: flex;\n  align-items: center;\n  gap: 16px;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from './MainInfo.styled';\nimport noPoster from 'images/no-poster.png';\n\nconst MainInfo = ({ data }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n\n  const posterImg = poster_path\n    ? `https://image.tmdb.org/t/p/w300_and_h450_bestv2${poster_path}`\n    : noPoster;\n  const posterAlt = `Poster of ${original_title}`;\n  const title = `${original_title} (${release_date.slice(0, 4)})`;\n  const genresString = genres.map(({ name }) => name).join(', ');\n\n  return (\n    <Container>\n      <img src={posterImg} alt={posterAlt} width=\"200\" height=\"300\" />\n      <div>\n        <h1>{title}</h1>\n        <p>\n          User Score: <b>{vote_average}</b>\n        </p>\n        <h2>Overview</h2>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n        <p>{genresString}</p>\n      </div>\n    </Container>\n  );\n};\n\nMainInfo.propTypes = {\n  data: PropTypes.shape({\n    poster_path: PropTypes.string,\n    original_title: PropTypes.string.isRequired,\n    release_date: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    overview: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n  }).isRequired,\n};\n\nexport default MainInfo;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  margin-left: 216px;\n`;\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: flex-start;\n  gap: 40px;\n  list-style: none;\n  padding-left: 0;\n`;\n\nexport const InfoLink = styled(Link)`\n  color: #362d62;\n\n  &:hover,\n  &:focus {\n    color: #ff9400;\n  }\n`;\n","import { Container, List, InfoLink } from './AdditionalInfo.styled';\n\nconst AdditionalInfo = () => {\n  return (\n    <Container>\n      <h3>Additional info</h3>\n      <List>\n        <li>\n          <InfoLink to=\"cast\">Cast</InfoLink>\n        </li>\n        <li>\n          <InfoLink to=\"reviews\">Reviews</InfoLink>\n        </li>\n      </List>\n    </Container>\n  );\n};\n\nexport default AdditionalInfo;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  text-align: left;\n  margin-top: 20px;\n`;\n\nexport const BackLink = styled(Link)`\n  font-size: 18px;\n  text-decoration: none;\n  color: #362d62;\n\n  &:hover,\n  &:focus {\n    color: #ff9400;\n  }\n`;\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieDetails } from 'services/MovieService';\nimport MainInfo from 'components/MainInfo/MainInfo';\nimport AdditionalInfo from 'components/AdditionalInfo/AdditionalInfo';\nimport Loader from 'components/Loader/Loader';\nimport Warning from 'components/Warning/Warning';\nimport { Container, BackLink } from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const location = useLocation();\n  const backLinkRef = useRef(location.state?.from ?? '/');\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState();\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(setMovieData).catch(setError);\n  }, [movieId]);\n\n  return (\n    <Container>\n      <BackLink to={backLinkRef.current}>‚Üê Go back</BackLink>\n      {movieData && <MainInfo data={movieData} />}\n      {movieData && <AdditionalInfo />}\n      {error && (\n        <Warning message=\"This page doesn't exist or something went wrong. Please try different page or try again later.\" />\n      )}\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </Container>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["Container","styled","data","poster_path","original_title","release_date","vote_average","overview","genres","posterImg","noPoster","posterAlt","title","slice","genresString","map","name","join","src","alt","width","height","List","InfoLink","Link","to","BackLink","location","useLocation","backLinkRef","useRef","state","from","movieId","useParams","useState","movieData","setMovieData","error","setError","useEffect","fetchMovieDetails","then","catch","current","Warning","message","Suspense","fallback","Loader","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","results","fetchMoviesByQuery","query","language","include_adult","id","MOVIE_URL","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}