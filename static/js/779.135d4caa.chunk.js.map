{"version":3,"file":"static/js/779.135d4caa.chunk.js","mappings":"4RAEaA,E,QAAOC,GAAAA,GAAH,8G,SC6CjB,EAxCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA8BJ,EAAAA,EAAAA,WAAS,GAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,WAA0BC,GAA1B,8EACEJ,GAAa,GADf,mBAGuBK,EAAAA,EAAAA,IAAkBD,GAHzC,OAGUE,EAHV,OAIIR,EAAeQ,GAJnB,gDAMIJ,GAAW,GANf,yBAQIF,GAAa,GARjB,6EADc,sBAaVN,GAbW,SAAD,2BAaDa,CAAWb,EACzB,GAAE,CAACA,IAEAK,GAAkB,SAACS,EAAA,EAAD,IAElBP,EAAgB,KAEfJ,EAAYY,QAGf,SAACjB,EAAD,UACGK,EAAYa,KAAI,gBAAGN,EAAH,EAAGA,GAAIO,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACf,2BACE,qCAAaD,MACb,uBAAIC,MAFGR,EADM,OAJW,SAACS,EAAA,EAAD,CAASC,QAAQ,kBAYlD,C,mMC5CDC,EAAAA,EAAAA,SAAAA,QAAyB,GAEzB,IAAMC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,6FACZD,EAAW,qBAC1BE,EAAS,CACbC,IAFmBH,kDAGnBI,OAAQ,CACNC,QAASN,IALoB,UAQPD,EAAAA,EAAAA,GAAMI,GARC,cAQ3BI,EAR2B,yBAS1BA,EAAYjB,KAAKkB,SATS,2CAAH,qDAYnBC,EAAkB,mCAAG,WAAMC,GAAN,gFACbT,EAAW,eACxBE,EAAS,CACbC,IAFiBH,4CAGjBI,OAAQ,CACNC,QAASN,EACTU,MAAAA,EACAC,SAAU,QACVC,eAAe,IARa,UAWNb,EAAAA,EAAAA,GAAMI,GAXA,cAW1BI,EAX0B,yBAYzBA,EAAYjB,KAAKkB,SAZQ,2CAAH,sDAelBK,EAAiB,mCAAG,WAAMzB,GAAN,kFACzB0B,EADyB,UACVb,EADU,iBACOb,GAChCe,EAAS,CACbC,IAAKU,EACLT,OAAQ,CACNC,QAASN,EACTW,SAAU,UANiB,UASLZ,EAAAA,EAAAA,GAAMI,GATD,cASzBI,EATyB,yBAUxBA,EAAYjB,MAVY,2CAAH,sDAajByB,EAAc,mCAAG,WAAM3B,GAAN,kFACtB0B,EADsB,UACPb,EADO,iBACUb,EADV,YAEtBe,EAAS,CACbC,IAAKU,EACLT,OAAQ,CACNC,QAASN,EACTW,SAAU,UANc,UASFZ,EAAAA,EAAAA,GAAMI,GATJ,cAStBI,EATsB,yBAUrBA,EAAYjB,KAAK0B,MAVI,2CAAH,sDAad3B,EAAiB,mCAAG,WAAMD,GAAN,kFACzB0B,EADyB,UACVb,EADU,iBACOb,EADP,YAEzBe,EAAS,CACbC,IAAKU,EACLT,OAAQ,CACNC,QAASN,EACTW,SAAU,UANiB,UASLZ,EAAAA,EAAAA,GAAMI,GATD,cASzBI,EATyB,yBAUxBA,EAAYjB,KAAKkB,SAVO,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/MovieService.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\n  margin-top: 20px;\n  margin-bottom: 20px;\n  padding-left: 0;\n  list-style: none;\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from 'services/MovieService';\nimport Loader from 'components/Loader/Loader';\nimport Warning from 'components/Warning/Warning';\nimport { List } from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    async function getReviews(id) {\n      setIsLoading(true);\n      try {\n        const data = await fetchMovieReviews(id);\n        setReviewsData(data);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (movieId) getReviews(movieId);\n  }, [movieId]);\n\n  if (isLoading) return <Loader />;\n\n  if (isError) return null;\n\n  if (!reviewsData.length) return <Warning message=\"No reviews yet\" />;\n\n  return (\n    <List>\n      {reviewsData.map(({ id, author, content }) => (\n        <li key={id}>\n          <h4>Author: {author}</h4>\n          <p>{content}</p>\n        </li>\n      ))}\n    </List>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["List","styled","movieId","useParams","useState","reviewsData","setReviewsData","isLoading","setIsLoading","isError","setIsError","useEffect","id","fetchMovieReviews","data","getReviews","Loader","length","map","author","content","Warning","message","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","results","fetchMoviesByQuery","query","language","include_adult","fetchMovieDetails","MOVIE_URL","fetchMovieCast","cast"],"sourceRoot":""}