{"version":3,"file":"static/js/544.127c438d.chunk.js","mappings":"oKA4BA,IAzBkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACbC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,GAAME,MAAO,CAAEC,KAAMP,GAA1C,SACGG,KAFIC,EADC,KASjB,C,2HCuBD,UAlCa,WACX,OAA4BI,EAAAA,EAAAA,UAAS,MAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA8BH,EAAAA,EAAAA,WAAS,GAAvC,eAAOI,EAAP,KAAgBC,EAAhB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,2FACEH,GAAa,GADf,mBAGuBI,EAAAA,EAAAA,MAHvB,OAGUC,EAHV,OAIIP,EAAUO,GAJd,gDAMIH,GAAW,GANf,yBAQIF,GAAa,GARjB,6EADc,uBAAC,WAAD,wBAadM,EACD,GAAE,IAECP,GAAkB,SAAC,IAAD,IAElBE,GACK,SAAC,IAAD,CAASM,QAAQ,mDAGxB,iCACE,2CACCnB,IAAU,SAAC,IAAD,CAAWA,OAAQA,MAGnC,C,+LCrCDoB,EAAAA,EAAAA,SAAAA,QAAyB,GAEzB,IAAMC,EAAU,mCACVC,EAAW,gCAEJN,EAAmB,mCAAG,6FACZM,EAAW,qBAC1BC,EAAS,CACbC,IAFmBF,kDAGnBG,OAAQ,CACNC,QAASL,IALoB,UAQPD,EAAAA,EAAAA,GAAMG,GARC,cAQ3BI,EAR2B,yBAS1BA,EAAYV,KAAKW,SATS,2CAAH,qDAYnBC,EAAkB,mCAAG,WAAMC,GAAN,gFACbR,EAAW,eACxBC,EAAS,CACbC,IAFiBF,4CAGjBG,OAAQ,CACNC,QAASL,EACTS,MAAAA,EACAC,SAAU,QACVC,eAAe,IARa,UAWNZ,EAAAA,EAAAA,GAAMG,GAXA,cAW1BI,EAX0B,yBAYzBA,EAAYV,KAAKW,SAZQ,2CAAH,sDAelBK,EAAiB,mCAAG,WAAM5B,GAAN,kFACzB6B,EADyB,UACVZ,EADU,iBACOjB,GAChCkB,EAAS,CACbC,IAAKU,EACLT,OAAQ,CACNC,QAASL,EACTU,SAAU,UANiB,UASLX,EAAAA,EAAAA,GAAMG,GATD,cASzBI,EATyB,yBAUxBA,EAAYV,MAVY,2CAAH,sDAajBkB,EAAc,mCAAG,WAAM9B,GAAN,kFACtB6B,EADsB,UACPZ,EADO,iBACUjB,EADV,YAEtBkB,EAAS,CACbC,IAAKU,EACLT,OAAQ,CACNC,QAASL,EACTU,SAAU,UANc,UASFX,EAAAA,EAAAA,GAAMG,GATJ,cAStBI,EATsB,yBAUrBA,EAAYV,KAAKmB,MAVI,2CAAH,sDAadC,EAAiB,mCAAG,WAAMhC,GAAN,kFACzB6B,EADyB,UACVZ,EADU,iBACOjB,EADP,YAEzBkB,EAAS,CACbC,IAAKU,EACLT,OAAQ,CACNC,QAASL,EACTU,SAAU,UANiB,UASLX,EAAAA,EAAAA,GAAMG,GATD,cASzBI,EATyB,yBAUxBA,EAAYV,KAAKW,SAVO,2CAAH,qD","sources":["components/MovieList/MovieList.jsx","pages/Home/Home.jsx","services/MovieService.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { fetchTrendingMovies } from 'services/MovieService';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport Warning from 'components/Warning/Warning';\n\nconst Home = () => {\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  useEffect(() => {\n    async function getMovies() {\n      setIsLoading(true);\n      try {\n        const data = await fetchTrendingMovies();\n        setMovies(data);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    getMovies();\n  }, []);\n\n  if (isLoading) return <Loader />;\n\n  if (isError)\n    return <Warning message=\"Something went wrong. Please try again later.\" />;\n\n  return (\n    <>\n      <h1>Trending today</h1>\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["movies","location","useLocation","map","title","id","to","state","from","useState","setMovies","isLoading","setIsLoading","isError","setIsError","useEffect","fetchTrendingMovies","data","getMovies","message","axios","API_KEY","BASE_URL","config","url","params","api_key","fetchedData","results","fetchMoviesByQuery","query","language","include_adult","fetchMovieDetails","MOVIE_URL","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}