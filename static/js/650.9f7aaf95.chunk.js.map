{"version":3,"file":"static/js/650.9f7aaf95.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.jsx","pages/Movies/Movies.jsx","services/MovieService.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst MovieList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(({ title, id }) => (\n        <li key={id}>\n          <Link to={`/movies/${id}`} state={{ from: location }}>\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default MovieList;\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst Searchbar = ({ fetchData }) => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [inputValue, setInputValue] = useState(\n    () => searchParams.get('query') ?? ''\n  );\n\n  function onSubmit(e) {\n    e.preventDefault();\n    const query = e.target.input.value.trim();\n    const newSearchParams = query ? { query } : {};\n\n    setSearchParams(newSearchParams);\n    fetchData(query);\n  }\n\n  return (\n    <form onSubmit={onSubmit}>\n      <input\n        type=\"text\"\n        name=\"input\"\n        value={inputValue}\n        onChange={e => setInputValue(e.target.value)}\n      ></input>\n      <button>Search</button>\n    </form>\n  );\n};\n\nSearchbar.propTypes = {\n  fetchData: PropTypes.func.isRequired,\n};\n\nexport default Searchbar;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesByQuery } from 'services/MovieService';\nimport Searchbar from 'components/Searchbar/Searchbar';\nimport MovieList from 'components/MovieList/MovieList';\nimport Loader from 'components/Loader/Loader';\nimport Warning from 'components/Warning/Warning';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [movies, setMovies] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    async function getMovies(searchQuery) {\n      setIsLoading(true);\n      try {\n        const data = await fetchMoviesByQuery(searchQuery);\n        setMovies(data);\n      } catch (error) {\n        setIsError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n\n    if (query) getMovies(query);\n  }, [query]);\n\n  const onSubmit = query => {\n    if (!query) return setMovies(null);\n    setSearchParams({ query });\n  };\n\n  return (\n    <>\n      <Searchbar fetchData={onSubmit} />\n      {isLoading && <Loader />}\n      {isError && (\n        <Warning message=\"Something went wrong. Please try again later.\" />\n      )}\n      {!movies && (\n        <Warning message=\"Please let us know what are you looking for.\" />\n      )}\n      {movies &&\n        (movies?.length ? (\n          <MovieList movies={movies} />\n        ) : (\n          <Warning message=\"Your request turned no results. Please try another query.\" />\n        ))}\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["movies","location","useLocation","map","title","id","to","state","from","fetchData","useSearchParams","searchParams","setSearchParams","useState","get","inputValue","setInputValue","onSubmit","e","preventDefault","query","target","input","value","trim","type","name","onChange","setMovies","isLoading","setIsLoading","isError","setIsError","useEffect","searchQuery","fetchMoviesByQuery","data","getMovies","Loader","Warning","message","length","MovieList","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","results","language","include_adult","fetchMovieDetails","MOVIE_URL","fetchMovieCast","cast","fetchMovieReviews"],"sourceRoot":""}