{"version":3,"file":"static/js/416.1bffff39.chunk.js","mappings":"6OAkCA,EA5Ba,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,IAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAKA,OAJAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeN,GAASO,KAAKH,GAAaI,MAAMC,QAAQC,IACzD,GAAE,CAACV,IAECG,EAASQ,QAGZ,wBACGR,EAASS,KAAI,YAAwC,IAArCC,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,aAC1BC,EAAaD,EAAY,6DAC2BA,G,q8OAG1D,OACE,2BACE,gBAAKE,IAAKD,EAAYE,IAAKL,EAAMM,MAAM,SACvC,2CAAmBN,MACnB,yCAAiBC,OAHVD,EAMZ,OAhBwB,SAACO,EAAA,EAAD,CAASC,QAAQ,sBAmB/C,C,+LC/BDC,EAAAA,EAAAA,SAAAA,QAAyB,GAEzB,IAAMC,EAAU,mCACVC,EAAW,gCAEJC,EAAmB,mCAAG,6FACZD,EAAW,qBAC1BE,EAAS,CACbC,IAFmBH,kDAGnBI,OAAQ,CACNC,QAASN,IALoB,UAQPD,EAAAA,EAAAA,GAAMI,GARC,cAQ3BI,EAR2B,yBAS1BA,EAAYC,KAAKC,SATS,2CAAH,qDAYnBC,EAAkB,mCAAG,WAAMC,GAAN,gFACbV,EAAW,eACxBE,EAAS,CACbC,IAFiBH,4CAGjBI,OAAQ,CACNC,QAASN,EACTW,MAAAA,EACAC,SAAU,QACVC,eAAe,IARa,UAWNd,EAAAA,EAAAA,GAAMI,GAXA,cAW1BI,EAX0B,yBAYzBA,EAAYC,KAAKC,SAZQ,2CAAH,sDAelBK,EAAiB,mCAAG,WAAMC,GAAN,kFACzBC,EADyB,UACVf,EADU,iBACOc,GAChCZ,EAAS,CACbC,IAAKY,EACLX,OAAQ,CACNC,QAASN,EACTY,SAAU,UANiB,UASLb,EAAAA,EAAAA,GAAMI,GATD,cASzBI,EATyB,yBAUxBA,EAAYC,MAVY,2CAAH,sDAajBzB,EAAc,mCAAG,WAAMgC,GAAN,kFACtBC,EADsB,UACPf,EADO,iBACUc,EADV,YAEtBZ,EAAS,CACbC,IAAKY,EACLX,OAAQ,CACNC,QAASN,EACTY,SAAU,UANc,UASFb,EAAAA,EAAAA,GAAMI,GATJ,cAStBI,EATsB,yBAUrBA,EAAYC,KAAKS,MAVI,2CAAH,sDAadC,EAAiB,mCAAG,WAAMH,GAAN,kFACzBC,EADyB,UACVf,EADU,iBACOc,EADP,YAEzBZ,EAAS,CACbC,IAAKY,EACLX,OAAQ,CACNC,QAASN,EACTY,SAAU,UANiB,UASLb,EAAAA,EAAAA,GAAMI,GATD,cASzBI,EATyB,yBAUxBA,EAAYC,KAAKC,SAVO,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/MovieService.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/MovieService';\nimport Warning from 'components/Warning/Warning';\nimport noProfile from 'images/no-profile.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCastData] = useState([]);\n  useEffect(() => {\n    fetchMovieCast(movieId).then(setCastData).catch(console.log);\n  }, [movieId]);\n\n  if (!castData.length) return <Warning message=\"No cast info found\" />;\n\n  return (\n    <ul>\n      {castData.map(({ name, character, profile_path }) => {\n        const profileImg = profile_path\n          ? `https://www.themoviedb.org/t/p/w300_and_h450_bestv2${profile_path}`\n          : noProfile;\n\n        return (\n          <li key={name}>\n            <img src={profileImg} alt={name} width=\"150\" />\n            <div>Acthor name: {name}</div>\n            <div>Character: {character}</div>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\naxios.defaults.baseURL = '';\n\nconst API_KEY = '1d78fd1734a54a82c67aadef48a71616';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrendingMovies = async () => {\n  const TRENDING_URL = BASE_URL + 'trending/movie/day';\n  const config = {\n    url: TRENDING_URL,\n    params: {\n      api_key: API_KEY,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMoviesByQuery = async query => {\n  const SEARCH_URL = BASE_URL + 'search/movie';\n  const config = {\n    url: SEARCH_URL,\n    params: {\n      api_key: API_KEY,\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n\nexport const fetchMovieDetails = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data;\n};\n\nexport const fetchMovieCast = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/credits`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.cast;\n};\n\nexport const fetchMovieReviews = async id => {\n  const MOVIE_URL = `${BASE_URL}movie/${id}/reviews`;\n  const config = {\n    url: MOVIE_URL,\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  };\n  const fetchedData = await axios(config);\n  return fetchedData.data.results;\n};\n"],"names":["movieId","useParams","useState","castData","setCastData","useEffect","fetchMovieCast","then","catch","console","log","length","map","name","character","profile_path","profileImg","src","alt","width","Warning","message","axios","API_KEY","BASE_URL","fetchTrendingMovies","config","url","params","api_key","fetchedData","data","results","fetchMoviesByQuery","query","language","include_adult","fetchMovieDetails","id","MOVIE_URL","cast","fetchMovieReviews"],"sourceRoot":""}